version: '3.8'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.7.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    networks:
      - kafka-demo
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka1:  
    image: 'confluentinc/cp-kafka:7.7.0'  
    hostname: kafka1
    container_name: kafka1
    ports:  
      - "9092:9092"
      - "19092:19092"
    environment:  
      KAFKA_BROKER_ID: 1  
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181  
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:9092  
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092  
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT  
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT  
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  
    networks:
      - kafka-demo         
    depends_on:
      - zoo1

  kafka-ui:  
    image: 'provectuslabs/kafka-ui:v0.7.2'  
    container_name: kafka-ui  
    ports:  
      - '8080:8080'  
    environment:  
      KAFKA_CLUSTERS_0_NAME: local  
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092  
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo1:2181  
    depends_on:  
      - kafka1
    networks:
      - kafka-demo

  clickhouse:
    image: clickhouse/clickhouse-server:24.8.4.13-alpine
    restart: unless-stopped
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka-demo     

networks:  
  kafka-demo: